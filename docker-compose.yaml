version: '3.8'

services:
  app:
    container_name: chatbot-app
    build:
      context: .
      dockerfile: ./docker/app/Dockerfile
    volumes:
      - ./:/app
    ports:
      - 5000:5000
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DATABASE_URL=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:${POSTGRES_PORT}/${POSTGRES_DB}
      - YOU_API_KEY=${YOU_API_KEY}
    networks:
      - chatbot-network
    depends_on:
      - db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/v1/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    container_name: chatbot-db
    build:
      context: .
      dockerfile: ./docker/db/Dockerfile
    restart: always
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - chatbot-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

networks:
  chatbot-network:
    driver: bridge

volumes:
  postgres_data: